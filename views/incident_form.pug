//- html
//-   body
//-     //- script(src=‘https:cdn.jsdelivr.net/npm/darkmode-js@1.5.7/lib/darkmode-js.min.js’)
//-     //- script.
//-     //-   function addDarkmodeWidget() {
//-     //-   new Darkmode().showWidget();
//-     //-   }
//-     //-   window.addEventListener(‘load’, addDarkmodeWidget);
//- h1
//-   header(style="text-align: center;") Narritive
//- form(class="row g-3 needs-validation", novalidate)
//- div(class="col-3", style="margin-left: 400px;")
//-   button(class="btn btn-primary", type="submit") Back
//- div(class="col-3", style="margin-left: 950px;")
//-   button(class="btn btn-primary", type="submit") Submit
//- div(class="mb-1")
//-   label(for="exampleFormControlTextarea1", class="form-label")
//-   textarea#exampleFormControlTextarea1(class="form-control", rows="6")
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom02", class="form-label") Officer
//-   input#validationCustom02(type="text", class="form-control", required)
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom05", class="form-label") Serial#
//-   input#validationCustom05(type="text", class="form-control", required)
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom05", class="form-label") Date
//-   input#validationCustom05(type="text", class="form-control", required)
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom01", class="form-label") Time
//-   input#validationCustom01(type="text", class="form-control", required)
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom02", class="form-label") Supp
//-   input#validationCustom02(type="text", class="form-control", required)
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom01", class="form-label") Serial#
//-   input#validationCustom01(type="text", class="form-control", required)
//- div(class="col-sm-3 mx-auto")
//-   label(for="validationCustom02", class="form-label") Date
//-   input#validationCustom02(type="text", class="form-control", required)



extends layout

block content
  h1= title

  form(method='POST' action='')
    div.form-group
      label(for='title') Title:
      input#title.form-control(type='text', placeholder='Name of incident' name='title' required='true' value=(undefined===incident ? '' : incident.title) )
    div.form-group
      label(for='people') People:
      select#people.form-control(type='select', placeholder='Select Person' name='person' required='true' )
        - people.sort(function(a, b) {let textA = a.last_name.toUpperCase(); let textB = b.first_name.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
        for people in people
          if incident
            option(value=people._id selected=(people._id.toString()===incident.people._id.toString() ? 'selected' : false) ) #{people.name}
          else
            option(value=people._id) #{people.name}
    div.form-group
      label(for='summary') Summary:
      input#summary.form-control(type='textarea', placeholder='Summary' name='summary' value=(undefined===incident ? '' : incident.summary) required='true')
    div.form-group
      label(for='irn') IRN :
      input#irn.form-control(type='text', placeholder='IRN' name='irn' value=(undefined===incident ? '' : incident.irn) required='true') 
    div.form-group
      label Vehicle:
      div
        for vehicle in vehicle
          div(style='display: inline; padding-right:10px;')
            input.checkbox-input(type='checkbox', name='vehicle', id=vehicle._id, value=vehicle._id, checked=vehicle.checked )
            label(for=vehicle._id) #{vehicle.name}
    button.btn.btn-primary(type='submit') Submit

  if errors 
    ul
      for error in errors
        li!= error.msg